// Generated by CoffeeScript 1.3.3
var TRACKER, options;

window['_gaq'] = window['_gaq'] || [];

TRACKER = TRACKER || {};

TRACKER.exits = (function(my, _gaq, $) {
  var debug, options, setExits, setJqueryMethods, setPubSub, setRegExp, track;
  options = {
    debug: false,
    google: {
      debug: false
    }
  };
  setRegExp = function(exp) {
    var regexp, t;
    if (exp && (typeof exp !== "object")) {
      regexp = (typeof exp === "string" ? new RegExp(exp, "i") : exp);
    } else {
      t = "";
      if (typeof exp !== "undefined") {
        $.each(exp, function(i, ex) {
          return t += ex + "|";
        });
        t = t.substr(0, t.length - 1);
        regexp = new RegExp(t, "i");
      }
    }
    return regexp;
  };
  setJqueryMethods = function() {
    debug("jQuery extenral method");
    jQuery.extend(jQuery.expr[":"], {
      external: function(obj, index, meta, stack) {
        var domain, domainTest, internal, internalTest, protocolTest, tester, url;
        tester = /:\/\//;
        domain = new RegExp(location.hostname.replace("www.", ""));
        url = jQuery(obj).attr("href");
        internal = setRegExp(options.trackExit);
        protocolTest = tester.test(url);
        domainTest = domain.test(url);
        internalTest = (options.google.trackExit.length ? internal.test(url) : false);
        return protocolTest && !domainTest && !internalTest;
      }
    });
  };
  setExits = function() {
    debug("Exit links intialized");
    $("a:external").bind("click", function() {
      var link;
      link = $(this).attr("href");
      debug("Set exit link for: " + link);
      // $.publish("tracker.link.exit", link);
      track({
        type: "_trackEvent",
        category: "Site Interactions",
        action: "External Link",
        name: link
      });
    });
  };
  track = function(tracking) {
    var track = [];
    $.each(tracking, function(key, value) {
      track.push(value);
    });
    debug("Tracking: ");
    debug(track);
    _gaq.push(track);
    window['_gaq'].push(track);
    return _gaq;
  };
  setPubSub = function() {
    var o;
    debug("Could not find pub sub. No worries, I'll add it.");
    o = $({});
    $.subscribe = function() {
      o.on.apply(o, arguments);
    };
    $.unsubscribe = function() {
      o.off.apply(o, arguments);
    };
    $.publish = function() {
      o.trigger.apply(o, arguments);
    };
  };
  debug = function(msg) {
    if (options.debug) {
      console.log(msg);
    }
  };
  my.init = function(opts) {
    options.google = $.extend(options.google, opts.google);
    if (typeof $.publish !== "function") {
      setPubSub();
    } else {
      debug("Pubsub already exists on the page");
    }
    setJqueryMethods();
    setExits();
  };
  return my;
})(TRACKER.exits || {}, _gaq || {}, jQuery);

options = {
  google: {
    trackExit: ''
  }
};

$("document").ready(function() {
  TRACKER.exits.init(options);
});